//
//  LibraryViewController.swift"
//  Library//
//  Automatically generated by MobileCodeGenerator 3.
//  Copyright Â© 2017 . All rights reserved.
//
import UIKit

class LibraryViewController: UITableViewController
 {

	@IBOutlet weak var shelfList: UITableView!
	@IBOutlet weak var addButton: UIBarButtonItem!
    
	var shelfListContents: [String] = []
    var clickedShelf: String = ""
    
	override func viewDidLoad() {
	    super.viewDidLoad()
        self.reloadShelves()
	}
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        
        if (segue.identifier == "ShelfBooks") {
            let vc = segue.destination as! ShelfViewController
            vc.shelfName = clickedShelf
        }
    }

    
    @IBAction func addShelf(_ sender: Any) {
        self.buildAlert(title: "Add Shelf", message: "Enter name", placeholder: "shelf name")
    }
	
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let cell = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath)
     
        cell.textLabel?.text = shelfListContents[indexPath.row]
        
        return cell
    }
    
    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
        let indexPath = tableView.indexPathForSelectedRow;
        let currentCell = tableView.cellForRow(at: indexPath!) as UITableViewCell!;
        
        clickedShelf = (currentCell?.textLabel?.text!)!
        performSegue(withIdentifier: "ShelfBooks", sender: self)
    }

    
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return shelfListContents.count
    }
    
    override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {
        if editingStyle == UITableViewCellEditingStyle.delete {
            tableView.deleteRows(at: [indexPath], with: .bottom)
            DatabaseHandler().deleteShelf(name: shelfListContents[indexPath.row])
            shelfListContents.remove(at: indexPath.row)
        }
    }
    
    func buildAlert(title: String, message: String, placeholder: String){
    
        let alertController = UIAlertController(title: title, message: message, preferredStyle: .alert)
        
        let confirmAction = UIAlertAction(title: "Add", style: .default) { (_) in
            
            let shelfName = alertController.textFields![0].text;
            
            if shelfName != ""{
                // store your data
                DatabaseHandler.saveShelf(name: shelfName!, bookCount: 0)
                self.shelfListContents.append(shelfName!)
                self.tableView.reloadData()

            } else {
                // user did not fill field
            }
        }
        
        let cancelAction = UIAlertAction(title: "Cancel", style: .cancel) { (_) in }
        
        alertController.addTextField { (textField) in
            textField.placeholder = placeholder
        }
        alertController.addAction(confirmAction)
        alertController.addAction(cancelAction)
        
        self.present(alertController, animated: true, completion: nil)
    }
    
    func reloadShelves(){
        
        shelfListContents = []
        
        let shelves = DatabaseHandler().loadAllShelfs()
        
        for shelf in shelves {
            shelfListContents.append(shelf.name!)
        }
        
        self.tableView.reloadData()
    
    }
}
