/************************************************************************************************************************
 * Copyright 2017 Gregorio Perego, Stefania Pezzetti, Aldo Pintus, Alessio Rossotti
 * This file is part of it.polimi.mobilecodegenerator.
 * 
 * it.polimi.mobilecodegenerator is free software: 
 * you can redistribute it and/or modify it under the terms of the 
 * GNU General Public License as published by the Free Software Foundation, 
 * either version 3 of the License, or (at your option) any later version.
 * 
 * it.polimi.mobilecodegenerator is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
 * See the GNU General Public License for more details.You should have received a copy of the GNU General Public License
 * along with it.polimi.mobilecodegenerator. If not, see <http://www.gnu.org/licenses/>
 * ***********************************************************************************************************************/

import metamodel;

Boolean isAppNameValid(String name):JAVA model_checks.JavaChecks.isAppNameValid(java.lang.String);
Boolean isCompanyIdentifierValid(String companyIdentifier):JAVA model_checks.JavaChecks.isCompanyIdentifierValid(java.lang.String);

List[String] invalidIds(List[String] ids):JAVA model_checks.JavaChecks.invalidIds(java.util.List);
List[String] duplicatedIds(List[String] ids):JAVA model_checks.JavaChecks.duplicatedIds(java.util.List);

List[String] invalidFilesNames():JAVA model_checks.JavaChecks.invalidFilesNames();
List[String] invalidFilesExtensions():JAVA model_checks.JavaChecks.invalidFilesExtensions();
List[String] duplicatedFilesNames():JAVA model_checks.JavaChecks.duplicatedFilesNames();

Boolean isDestinationNotAMenuItem(String destination, List[String] menuItems):JAVA model_checks.JavaChecks.isDestinationNotAMenuItem(java.lang.String, java.util.List);

List[String] ids(Application this) : 

	if(menu!=null) then {
		viewControllers.buttons.id
			.addAll(viewControllers.cards.id)
			.addAll(viewControllers.datepickers.id)
			.addAll(viewControllers.editTexts.id)
			.addAll(viewControllers.gridViews.id)
			.addAll(viewControllers.imageViews.id)
			.addAll(viewControllers.listViews.id)
			.addAll(viewControllers.sliders.id)
			.addAll(viewControllers.spinners.id)
			.addAll(viewControllers.switches.id)
			.addAll(viewControllers.textViews.id)
			.addAll(viewControllers.timepickers.id)
			.addAll(viewControllers.webViews.id)
			.addAll(viewControllers.audioPlayers.reject(ap|ap==null).id)
			.addAll(viewControllers.videoViews.reject(vv|vv==null).id)
			.addAll(viewControllers.alertDialogs.id)
			.addAll(viewControllers.progressDialogs.id)
			.addAll(watchControllers.watchButtons.id)
			.addAll(watchControllers.watchTextViews.id)
			.addAll(menu.menuItems.id)
		
	}.first()
	else { 
		viewControllers.buttons.id
			.addAll(viewControllers.cards.id)
			.addAll(viewControllers.datepickers.id)
			.addAll(viewControllers.editTexts.id)
			.addAll(viewControllers.gridViews.id)
			.addAll(viewControllers.imageViews.id)
			.addAll(viewControllers.listViews.id)
			.addAll(viewControllers.sliders.id)
			.addAll(viewControllers.spinners.id)
			.addAll(viewControllers.switches.id)
			.addAll(viewControllers.textViews.id)
			.addAll(viewControllers.timepickers.id)
			.addAll(viewControllers.webViews.id)
			.addAll(viewControllers.audioPlayers.reject(ap|ap==null).id)
			.addAll(viewControllers.videoViews.reject(vv|vv==null).id)
			.addAll(viewControllers.alertDialogs.id)
			.addAll(viewControllers.progressDialogs.id)
			.addAll(watchControllers.watchButtons.id)
			.addAll(watchControllers.watchTextViews.id)
	}.first();
	