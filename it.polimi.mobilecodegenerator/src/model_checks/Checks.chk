/************************************************************************************************************************
 * Copyright 2016 Gregorio Perego, Stefania Pezzetti, Aldo Pintus
 * This file is part of it.polimi.mobilecodegenerator.
 * 
 * it.polimi.mobilecodegenerator is free software: 
 * you can redistribute it and/or modify it under the terms of the 
 * GNU General Public License as published by the Free Software Foundation, 
 * either version 3 of the License, or (at your option) any later version.
 * 
 * it.polimi.mobilecodegenerator is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
 * See the GNU General Public License for more details.You should have received a copy of the GNU General Public License
 * along with it.polimi.mobilecodegenerator. If not, see <http://www.gnu.org/licenses/>
 * ***********************************************************************************************************************/

import metamodel;
extension model_checks::Extensions;

context Application ERROR "Application name '"+ name +"' does not match the regular expression ^[a-zA-Z]+" : isAppNameValid(name) == true;
	
context Application ERROR "Company identifier '"+ companyIdentifier +"' does not match the regular expression ^[a-z]+(\\.[a-z]+)*" : isCompanyIdentifierValid(companyIdentifier) == true;

context Application ERROR "Names of these ViewControllers do not match the regular expression ^[a-zA-Z][a-zA-Z0-9_]*" : invalidIds(viewControllers.name).size == 0;

context Application ERROR "Names of these WatchControllers do not match the regular expression ^[a-zA-Z][a-zA-Z0-9_]*" : invalidIds(watchControllers.name).size == 0;

context Application ERROR "Names of these ViewControllers must be unique" : duplicatedIds(viewControllers.name).size == 0;

context Application ERROR "Names of these WatchControllers must be unique" : duplicatedIds(watchControllers.name).size == 0;
	
context Application ERROR "These ids do not match the regular expression ^[a-zA-Z][a-zA-Z0-9_]*" : invalidIds(ids()).size == 0;

context Application ERROR "Ids must be unique" : duplicatedIds(ids()).size == 0;
	
context Application if(viewControllers.size) > 0 ERROR "There must be one and only one launcher ViewController" : viewControllers.select(vc | vc.launcher==true).size == 1;

context Application if(watchControllers.size) > 0 ERROR "There must be one and only one launcher WatchController" : watchControllers.select(vc | vc.launcher==true).size == 1;

context Application ERROR "Files in user_files folder must not be directories and must have a name containing only [a-z0-9_] with specified extension: " : invalidFilesNames().size == 0;

context Application if(invalidFilesNames().size == 0) ERROR "Extensions of files in user_files folder must be html, txt, css, png, jpg, gif, mp4, 3gp or mp3: " : invalidFilesExtensions().size == 0;

context Application if(invalidFilesNames().size == 0 && invalidFilesExtensions().size == 0) ERROR "Files in user_files folder must have different names: " : duplicatedFilesNames().size == 0;
	

context Button if(clickListener!=null && clickListener.navigation!=null) ERROR "Navigation must have a destination [Button: '"+id+"']" : !clickListener.navigation.destination.matches("");

context Button if(clickListener.navigation!=null && clickListener.navigation.destination!=null) ERROR "Destination of Navigation must be the name of an existing ViewController [Button: '"+id+"']" : viewController.application.viewControllers.exists(vc| vc.name==clickListener.navigation.destination);

context Button if(clickListener.navigation!=null && clickListener.navigation.destination!=null) ERROR "Destination of Navigation must not be a Menu Item [Button: '"+id+"' -> "+clickListener.navigation.destination+"]" : isDestinationNotAMenuItem(clickListener.navigation.destination, viewController.application.menu.menuItems.navigation.destination) == true;

context WatchButton if(watchClickListener!=null && watchClickListener.watchNavigation!=null) ERROR "WatchNavigation must have a destination [WatchButton: '"+id+"']" : !watchClickListener.watchNavigation.destination.matches("");

context WatchButton if(watchClickListener.watchNavigation!=null && watchClickListener.watchNavigation.destination!=null) ERROR "Destination of WatchNavigation must be the name of an existing WatchController [WatchButton: '"+id+"']" : watchController.application.watchControllers.exists(vc| vc.name==watchClickListener.watchNavigation.destination);

	
context ListView if(clickListener.navigation!=null) ERROR "Navigation must have a destination [ListView: '"+id+"']" : !clickListener.navigation.destination.matches("");

context ListView if(clickListener.navigation!=null && clickListener.navigation.destination!=null) ERROR "Destination of Navigation must be the name of an existing ViewController [ListView: '"+id+"']" : viewController.application.viewControllers.exists(vc| vc.name==clickListener.navigation.destination);

context ListView if(clickListener.navigation!=null && clickListener.navigation.destination!=null) ERROR "Destination of Navigation must not be a Menu Item [ListView: '"+id+"' -> "+clickListener.navigation.destination+"]" : isDestinationNotAMenuItem(clickListener.navigation.destination, viewController.application.menu.menuItems.navigation.destination) == true;


context GridView if(clickListener!=null && clickListener.navigation!=null) ERROR "Navigation must have a destination [GridView: '"+id+"']" : !clickListener.navigation.destination.matches("");

context GridView if(clickListener.navigation!=null && clickListener.navigation.destination!=null) ERROR "Destination of Navigation must be the name of an existing ViewController [GridView: '"+id+"']" : viewController.application.viewControllers.exists(vc| vc.name==clickListener.navigation.destination);

context GridView if(clickListener.navigation!=null && clickListener.navigation.destination!=null) ERROR "Destination of Navigation must not be a Menu Item [GridView: '"+id+"' -> "+clickListener.navigation.destination+"]" : isDestinationNotAMenuItem(clickListener.navigation.destination, viewController.application.menu.menuItems.navigation.destination) == true;


context PhotocameraController if(!imageViewId.matches("")) ERROR "ImageViewId of PhotocameraController must be the id of an existing ImageView with sourceType = 'hardwareFile' in the same ViewController" : viewController.imageViews.exists(iv| iv.id.matches(imageViewId) && iv.sourceType.toString().matches("hardwareFile"));		

context VideocameraController if(!videoViewId.matches("")) ERROR "VideoViewId of VideocameraController must be the id of an existing VideoView with sourceType = 'hardwareFile' in the same ViewController" : viewController.videoViews.exists(vv| vv.id.matches(videoViewId) && vv.sourceType.toString().matches("hardwareFile"));	

context AudioRecorder if(!audioPlayerId.matches("")) ERROR "AudioPlayerId of AudioRecorder must be the id of an existing AudioPlayer with sourceType = 'hardwareFile' in the same ViewController" : viewController.audioPlayers.exists(ap| ap.id.matches(audioPlayerId) && ap.sourceType.toString().matches("hardwareFile"));


context ImageView if(sourceType.toString().matches("hardwareFile")) ERROR "FileUri of ImageView must be left empty if the sourceType='hardwareFile'" : fileUri.matches("");

context VideoView if(sourceType.toString().matches("hardwareFile")) ERROR "FileUri of VideoView must be left empty if the sourceType='hardwareFile'" : fileUri.matches("");

context AudioPlayer if(sourceType.toString().matches("hardwareFile")) ERROR "FileUri of AudioPlayer must be left empty if the sourceType='hardwareFile'" : fileUri.matches("");

	
context ImageView if(sourceType.toString().matches("localFile") && !fileUri.matches("")) ERROR "FileUri of ImageView must end with png, jpg or gif extensions" : fileUri.contains(".") && (fileUri.split("\\.").get(1).matches("png") || fileUri.split("\\.").get(1).matches("jpg") || fileUri.split("\\.").get(1).matches("gif"));

context VideoView if(sourceType.toString().matches("localFile") && !fileUri.matches("")) ERROR "FileUri of VideoView must end with mp4 or 3gp extensions" : fileUri.contains(".") && (fileUri.split("\\.").get(1).matches("mp4") || fileUri.split("\\.").get(1).matches("3gp"));

context AudioPlayer if(sourceType.toString().matches("localFile") && !fileUri.matches("")) ERROR "FileUri of AudioPlayer must end with mp3 extension" : fileUri.contains(".") && (fileUri.split("\\.").get(1).matches("mp3"));

context WebView if(!HTMLFileName.matches("")) ERROR "HTMLFileName of WebView must end with html extension" : HTMLFileName.contains(".") && (HTMLFileName.split("\\.").get(1).matches("html"));


context ViewController ERROR "Names of AsyncTasks must be of minimum one character long" : asyncTasks.forAll(at| at.name.length>0);

context ViewController ERROR "Names of AsyncTasks must be unique in the same ViewController" : asyncTasks.forAll(at1 | asyncTasks.select(at2 | at1.name.matches(at2.name)).size == 1);


context Menu if (this != null && menuItems.size > 0) ERROR "Menu must contain the launcher ViewController as first menu item": menuItems.get(0).navigation.destination.matches(application.viewControllers.select(vc | vc.launcher==true).first().name);

context Menu if (this != null && menuItems.size > 0) ERROR "Menu items must be all different ": duplicatedIds(menuItems.navigation.destination).size == 0;

context MenuItem ERROR "There must be a Navigation for every MenuItem [MenuItem: '"+id+"']" : navigation!=null;

context MenuItem if(navigation != null) ERROR "Navigation must have a destination [MenuItem: '"+id+"']" : !navigation.destination.matches("");

context MenuItem if(navigation != null && navigation.destination != null) ERROR "Destination of Navigation must be the name of an existing ViewController [MenuItem: '"+id+"']" : menu.application.viewControllers.exists(vc | vc.name.matches(navigation.destination));